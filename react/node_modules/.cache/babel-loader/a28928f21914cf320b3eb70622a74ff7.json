{"ast":null,"code":"import _slicedToArray from \"I:\\\\projects\\\\reactdjangouserauth\\\\react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"I:\\\\projects\\\\reactdjangouserauth\\\\react\\\\src\\\\components\\\\ThemeContext.jsx\";\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nvar ThemeContext = createContext();\nexport var ThemeProvider = function ThemeProvider(_ref) {\n  var children = _ref.children;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    theme = _useState2[0],\n    setTheme = _useState2[1]; // Initialized to null\n  // Fetch the initial theme from the backend when the component mounts\n  useEffect(function () {\n    axios.get('/api/getTheme') // Replace with your actual API endpoint\n    .then(function (response) {\n      if (response.status === 200) {\n        setTheme(response.data.theme);\n      }\n    }).catch(function (error) {\n      console.error(\"Error fetching the theme\", error);\n    });\n  }, []);\n\n  // Function to toggle the theme and update it in the backend\n  var toggleTheme = function toggleTheme() {\n    var newTheme = theme === 'light' ? 'dark' : 'light';\n    axios.post('/api/updateTheme', {\n      theme: newTheme\n    }) // Replace with your actual API endpoint\n    .then(function (response) {\n      if (response.status === 200) {\n        setTheme(newTheme);\n      }\n    }).catch(function (error) {\n      console.error(\"Error updating the theme\", error);\n    });\n  };\n\n  // Do not render children until the theme is fetched from the server\n  if (theme === null) return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 30\n    }\n  }, \"Loading...\");\n  return /*#__PURE__*/React.createElement(ThemeContext.Provider, {\n    value: {\n      theme: theme,\n      toggleTheme: toggleTheme\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, children);\n};\nexport var useTheme = function useTheme() {\n  var context = useContext(ThemeContext);\n  if (!context) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","ThemeContext","ThemeProvider","_ref","children","_useState","_useState2","_slicedToArray","theme","setTheme","get","then","response","status","data","catch","error","console","toggleTheme","newTheme","post","createElement","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","Provider","value","useTheme","context","Error"],"sources":["I:/projects/reactdjangouserauth/react/src/components/ThemeContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst ThemeContext = createContext();\r\n\r\nexport const ThemeProvider = ({ children }) => {\r\n  const [theme, setTheme] = useState(null);  // Initialized to null\r\n  \r\n  // Fetch the initial theme from the backend when the component mounts\r\n  useEffect(() => {\r\n    axios.get('/api/getTheme')  // Replace with your actual API endpoint\r\n      .then(response => {\r\n        if (response.status === 200) {\r\n          setTheme(response.data.theme);\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.error(\"Error fetching the theme\", error);\r\n      });\r\n  }, []);\r\n  \r\n  // Function to toggle the theme and update it in the backend\r\n  const toggleTheme = () => {\r\n    const newTheme = theme === 'light' ? 'dark' : 'light';\r\n    \r\n    axios.post('/api/updateTheme', { theme: newTheme })  // Replace with your actual API endpoint\r\n      .then(response => {\r\n        if (response.status === 200) {\r\n          setTheme(newTheme);\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.error(\"Error updating the theme\", error);\r\n      });\r\n  };\r\n\r\n  // Do not render children until the theme is fetched from the server\r\n  if (theme === null) return <div>Loading...</div>;\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ theme, toggleTheme }}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useTheme = () => {\r\n  const context = useContext(ThemeContext);\r\n  if (!context) {\r\n    throw new Error('useTheme must be used within a ThemeProvider');\r\n  }\r\n  return context;\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC7E,OAAOC,KAAK,MAAM,OAAO;AAEzB,IAAMC,YAAY,GAAGL,aAAa,CAAC,CAAC;AAEpC,OAAO,IAAMM,aAAa,GAAG,SAAhBA,aAAaA,CAAAC,IAAA,EAAqB;EAAA,IAAfC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;EAAA,IAAAC,SAAA,GACZP,QAAQ,CAAC,IAAI,CAAC;IAAAQ,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAjCG,KAAK,GAAAF,UAAA;IAAEG,QAAQ,GAAAH,UAAA,KAAqB;EAE3C;EACAP,SAAS,CAAC,YAAM;IACdC,KAAK,CAACU,GAAG,CAAC,eAAe,CAAC,CAAE;IAAA,CACzBC,IAAI,CAAC,UAAAC,QAAQ,EAAI;MAChB,IAAIA,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;QAC3BJ,QAAQ,CAACG,QAAQ,CAACE,IAAI,CAACN,KAAK,CAAC;MAC/B;IACF,CAAC,CAAC,CACDO,KAAK,CAAC,UAAAC,KAAK,EAAI;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,IAAME,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;IACxB,IAAMC,QAAQ,GAAGX,KAAK,KAAK,OAAO,GAAG,MAAM,GAAG,OAAO;IAErDR,KAAK,CAACoB,IAAI,CAAC,kBAAkB,EAAE;MAAEZ,KAAK,EAAEW;IAAS,CAAC,CAAC,CAAE;IAAA,CAClDR,IAAI,CAAC,UAAAC,QAAQ,EAAI;MAChB,IAAIA,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;QAC3BJ,QAAQ,CAACU,QAAQ,CAAC;MACpB;IACF,CAAC,CAAC,CACDJ,KAAK,CAAC,UAAAC,KAAK,EAAI;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD,CAAC,CAAC;EACN,CAAC;;EAED;EACA,IAAIR,KAAK,KAAK,IAAI,EAAE,oBAAOb,KAAA,CAAA0B,aAAA;IAAAC,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAK,YAAe,CAAC;EAEhD,oBACEjC,KAAA,CAAA0B,aAAA,CAACpB,YAAY,CAAC4B,QAAQ;IAACC,KAAK,EAAE;MAAEtB,KAAK,EAALA,KAAK;MAAEU,WAAW,EAAXA;IAAY,CAAE;IAAAI,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAClDxB,QACoB,CAAC;AAE5B,CAAC;AAED,OAAO,IAAM2B,QAAQ,GAAG,SAAXA,QAAQA,CAAA,EAAS;EAC5B,IAAMC,OAAO,GAAGnC,UAAU,CAACI,YAAY,CAAC;EACxC,IAAI,CAAC+B,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,8CAA8C,CAAC;EACjE;EACA,OAAOD,OAAO;AAChB,CAAC"},"metadata":{},"sourceType":"module"}